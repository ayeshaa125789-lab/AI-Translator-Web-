import streamlit as st
from deep_translator import GoogleTranslator
from gtts import gTTS
import os
import tempfile
from playsound import playsound

# ---------------- LOGIN SYSTEM ---------------- #
# Simple username-password login
USER_CREDENTIALS = {"admin": "1234", "aisha": "4321"}

def login():
    st.title("üîê Login to AI Translator")

    username = st.text_input("Username")
    password = st.text_input("Password", type="password")

    if st.button("Login"):
        if username in USER_CREDENTIALS and USER_CREDENTIALS[username] == password:
            st.session_state.logged_in = True
            st.session_state.username = username
            st.success("‚úÖ Login successful!")
        else:
            st.error("‚ùå Invalid username or password.")

# ---------------- TRANSLATOR APP ---------------- #
def translator_app():
    st.title("üåç AI Translator")
    st.write("Translate your text instantly and even listen to it!")

    # Input text
    text = st.text_area("Enter text to translate:")

    # Choose languages
    languages = [
        "english", "urdu", "arabic", "hindi", "french", "german", "spanish", "chinese", "turkish"
    ]
    from_lang = st.selectbox("Translate from:", languages, index=0)
    to_lang = st.selectbox("Translate to:", languages, index=1)

    if st.button("Translate"):
        try:
            translated_text = GoogleTranslator(source=from_lang, target=to_lang).translate(text)
            st.success("‚úÖ Translation Successful!")
            st.text_area("Translated Text:", translated_text, height=100)

            # Voice output
            if st.checkbox("üîä Play translation voice"):
                tts = gTTS(translated_text, lang=to_lang if to_lang != "urdu" else "ur")
                temp_file = tempfile.NamedTemporaryFile(delete=False, suffix=".mp3")
                tts.save(temp_file.name)
                st.audio(temp_file.name, format="audio/mp3")
                temp_file.close()
        except Exception as e:
            st.error(f"‚ö†Ô∏è Error: {str(e)}")

    if st.button("Logout"):
        st.session_state.logged_in = False
        st.experimental_rerun()

# ---------------- MAIN APP ---------------- #
def main():
    st.set_page_config(page_title="AI Translator", page_icon="üåç", layout="centered")
    if "logged_in" not in st.session_state:
        st.session_state.logged_in = False

    if not st.session_state.logged_in:
        login()
    else:
        translator_app()

if __name__ == "__main__":
    main()
